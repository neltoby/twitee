{"id":"Bvms","dependencies":[{"name":"C:\\Users\\TOBENNA\\ParcelTut\\tutorial\\node_modules\\@sentry\\core\\esm\\sdk.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\TOBENNA\\ParcelTut\\tutorial\\package.json","includedInParent":true,"mtime":1604161791190},{"name":"C:\\Users\\TOBENNA\\ParcelTut\\tutorial\\node_modules\\@sentry\\core\\package.json","includedInParent":true,"mtime":1604161789526},{"name":"@sentry/hub","loc":{"line":1,"column":30},"parent":"C:\\Users\\TOBENNA\\ParcelTut\\tutorial\\node_modules\\@sentry\\core\\esm\\sdk.js","resolved":"C:\\Users\\TOBENNA\\ParcelTut\\tutorial\\node_modules\\@sentry\\hub\\esm\\index.js"},{"name":"@sentry/utils","loc":{"line":2,"column":23},"parent":"C:\\Users\\TOBENNA\\ParcelTut\\tutorial\\node_modules\\@sentry\\core\\esm\\sdk.js","resolved":"C:\\Users\\TOBENNA\\ParcelTut\\tutorial\\node_modules\\@sentry\\utils\\esm\\index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.initAndBind=t;var e=require(\"@sentry/hub\"),r=require(\"@sentry/utils\");function t(t,n){!0===n.debug&&r.logger.enable();var i=(0,e.getCurrentHub)(),u=new t(n);i.bindClient(u)}"},"sourceMaps":{"js":{"mappings":[{"source":"../src/sdk.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":0}},{"source":"../src/sdk.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":13}},{"source":"../src/sdk.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":20}},{"source":"../src/sdk.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":35}},{"source":"../src/sdk.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":43}},{"source":"../src/sdk.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":56}},{"source":"../src/sdk.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":57}},{"source":"../src/sdk.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":64}},{"source":"../src/sdk.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":68}},{"source":"../src/sdk.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":76}},{"source":"../src/sdk.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":88}},{"source":"../src/sdk.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":90}},{"source":"../src/sdk.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":94}},{"source":"../src/sdk.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":96}},{"source":"../src/sdk.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":104}},{"source":"../src/sdk.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":119}},{"source":"../src/sdk.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":121}},{"source":"../src/sdk.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":129}},{"source":"../src/sdk.ts","name":null,"original":{"line":15,"column":6},"generated":{"line":1,"column":146}},{"source":"../src/sdk.ts","name":null,"original":{"line":15,"column":16},"generated":{"line":1,"column":155}},{"source":"../src/sdk.ts","name":null,"original":{"line":15,"column":65},"generated":{"line":1,"column":157}},{"source":"../src/sdk.ts","name":null,"original":{"line":15,"column":97},"generated":{"line":1,"column":159}},{"source":"../src/sdk.ts","name":null,"original":{"line":16,"column":24},"generated":{"line":1,"column":163}},{"source":"../src/sdk.ts","name":null,"original":{"line":16,"column":6},"generated":{"line":1,"column":167}},{"source":"../src/sdk.ts","name":null,"original":{"line":16,"column":14},"generated":{"line":1,"column":169}},{"source":"../src/sdk.ts","name":null,"original":{"line":17,"column":11},"generated":{"line":1,"column":176}},{"source":"../src/sdk.ts","name":null,"original":{"line":17,"column":11},"generated":{"line":1,"column":178}},{"source":"../src/sdk.ts","name":null,"original":{"line":17,"column":11},"generated":{"line":1,"column":185}},{"source":"../src/sdk.ts","name":null,"original":{"line":19,"column":8},"generated":{"line":1,"column":194}},{"source":"../src/sdk.ts","name":null,"original":{"line":19,"column":8},"generated":{"line":1,"column":198}},{"source":"../src/sdk.ts","name":null,"original":{"line":19,"column":14},"generated":{"line":1,"column":201}},{"source":"../src/sdk.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":1,"column":203}},{"source":"../src/sdk.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":1,"column":205}},{"source":"../src/sdk.ts","name":null,"original":{"line":20,"column":8},"generated":{"line":1,"column":222}},{"source":"../src/sdk.ts","name":null,"original":{"line":20,"column":17},"generated":{"line":1,"column":224}},{"source":"../src/sdk.ts","name":null,"original":{"line":20,"column":21},"generated":{"line":1,"column":228}},{"source":"../src/sdk.ts","name":null,"original":{"line":20,"column":33},"generated":{"line":1,"column":230}},{"source":"../src/sdk.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":1,"column":233}},{"source":"../src/sdk.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":1,"column":235}},{"source":"../src/sdk.ts","name":null,"original":{"line":21,"column":17},"generated":{"line":1,"column":246}}],"sources":{"../src/sdk.ts":"import { getCurrentHub } from '@sentry/hub';\nimport { Client, Options } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\n/** A class object that can instantiate Client objects. */\nexport type ClientClass<F extends Client, O extends Options> = new (options: O) => F;\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind<F extends Client, O extends Options>(clientClass: ClientClass<F, O>, options: O): void {\n  if (options.debug === true) {\n    logger.enable();\n  }\n  const hub = getCurrentHub();\n  const client = new clientClass(options);\n  hub.bindClient(client);\n}\n"},"lineCount":null}},"error":null,"hash":"ac40e1d0d4169fda9eb29ca463b400dd","cacheData":{"env":{}}}