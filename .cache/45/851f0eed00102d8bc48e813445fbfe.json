{"id":"../node_modules/@sentry/tracing/esm/errors.js","dependencies":[{"name":"C:\\Users\\TOBENNA\\ParcelTut\\tutorial\\node_modules\\@sentry\\tracing\\esm\\errors.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\TOBENNA\\ParcelTut\\tutorial\\package.json","includedInParent":true,"mtime":1604161791190},{"name":"C:\\Users\\TOBENNA\\ParcelTut\\tutorial\\node_modules\\@sentry\\tracing\\package.json","includedInParent":true,"mtime":1604161789526},{"name":"@sentry/utils","loc":{"line":1,"column":50},"parent":"C:\\Users\\TOBENNA\\ParcelTut\\tutorial\\node_modules\\@sentry\\tracing\\esm\\errors.js","resolved":"C:\\Users\\TOBENNA\\ParcelTut\\tutorial\\node_modules\\@sentry\\utils\\esm\\index.js"},{"name":"./spanstatus","loc":{"line":2,"column":27},"parent":"C:\\Users\\TOBENNA\\ParcelTut\\tutorial\\node_modules\\@sentry\\tracing\\esm\\errors.js","resolved":"C:\\Users\\TOBENNA\\ParcelTut\\tutorial\\node_modules\\@sentry\\tracing\\esm\\spanstatus.js"},{"name":"./utils","loc":{"line":3,"column":37},"parent":"C:\\Users\\TOBENNA\\ParcelTut\\tutorial\\node_modules\\@sentry\\tracing\\esm\\errors.js","resolved":"C:\\Users\\TOBENNA\\ParcelTut\\tutorial\\node_modules\\@sentry\\tracing\\esm\\utils.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerErrorInstrumentation = registerErrorInstrumentation;\n\nvar _utils = require(\"@sentry/utils\");\n\nvar _spanstatus = require(\"./spanstatus\");\n\nvar _utils2 = require(\"./utils\");\n\n/**\n * Configures global error listeners\n */\nfunction registerErrorInstrumentation() {\n  (0, _utils.addInstrumentationHandler)({\n    callback: errorCallback,\n    type: 'error'\n  });\n  (0, _utils.addInstrumentationHandler)({\n    callback: errorCallback,\n    type: 'unhandledrejection'\n  });\n}\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\n\n\nfunction errorCallback() {\n  var activeTransaction = (0, _utils2.getActiveTransaction)();\n\n  if (activeTransaction) {\n    _utils.logger.log(\"[Tracing] Transaction: \" + _spanstatus.SpanStatus.InternalError + \" -> Global error occured\");\n\n    activeTransaction.setStatus(_spanstatus.SpanStatus.InternalError);\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../src/errors.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":12,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":14,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":17,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":17,"column":9}},{"source":"../src/errors.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":17,"column":37}},{"source":"../src/errors.ts","name":null,"original":{"line":9,"column":44},"generated":{"line":17,"column":40}},{"source":"../src/errors.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":18,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":10,"column":28},"generated":{"line":18,"column":40}},{"source":"../src/errors.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":19,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":19,"column":4}},{"source":"../src/errors.ts","name":null,"original":{"line":11,"column":12},"generated":{"line":19,"column":12}},{"source":"../src/errors.ts","name":null,"original":{"line":11,"column":14},"generated":{"line":19,"column":14}},{"source":"../src/errors.ts","name":null,"original":{"line":10,"column":28},"generated":{"line":19,"column":27}},{"source":"../src/errors.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":20,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":20,"column":4}},{"source":"../src/errors.ts","name":null,"original":{"line":12,"column":8},"generated":{"line":20,"column":8}},{"source":"../src/errors.ts","name":null,"original":{"line":12,"column":10},"generated":{"line":20,"column":10}},{"source":"../src/errors.ts","name":null,"original":{"line":10,"column":28},"generated":{"line":21,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":21,"column":3}},{"source":"../src/errors.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":22,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":14,"column":28},"generated":{"line":22,"column":40}},{"source":"../src/errors.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":23,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":23,"column":4}},{"source":"../src/errors.ts","name":null,"original":{"line":15,"column":12},"generated":{"line":23,"column":12}},{"source":"../src/errors.ts","name":null,"original":{"line":15,"column":14},"generated":{"line":23,"column":14}},{"source":"../src/errors.ts","name":null,"original":{"line":14,"column":28},"generated":{"line":23,"column":27}},{"source":"../src/errors.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":24,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":24,"column":4}},{"source":"../src/errors.ts","name":null,"original":{"line":16,"column":8},"generated":{"line":24,"column":8}},{"source":"../src/errors.ts","name":null,"original":{"line":16,"column":10},"generated":{"line":24,"column":10}},{"source":"../src/errors.ts","name":null,"original":{"line":14,"column":28},"generated":{"line":25,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":25,"column":3}},{"source":"../src/errors.ts","name":null,"original":{"line":18,"column":1},"generated":{"line":26,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":27,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":32,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":23,"column":9},"generated":{"line":32,"column":9}},{"source":"../src/errors.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":32,"column":22}},{"source":"../src/errors.ts","name":null,"original":{"line":23,"column":22},"generated":{"line":32,"column":25}},{"source":"../src/errors.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":33,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":24,"column":8},"generated":{"line":33,"column":6}},{"source":"../src/errors.ts","name":null,"original":{"line":24,"column":25},"generated":{"line":33,"column":23}},{"source":"../src/errors.ts","name":null,"original":{"line":24,"column":28},"generated":{"line":33,"column":26}},{"source":"../src/errors.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":33,"column":61}},{"source":"../src/errors.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":35,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":25,"column":6},"generated":{"line":35,"column":6}},{"source":"../src/errors.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":35,"column":23}},{"source":"../src/errors.ts","name":null,"original":{"line":25,"column":25},"generated":{"line":35,"column":25}},{"source":"../src/errors.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":36,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":26,"column":11},"generated":{"line":36,"column":18}},{"source":"../src/errors.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":36,"column":21}},{"source":"../src/errors.ts","name":null,"original":{"line":26,"column":15},"generated":{"line":36,"column":22}},{"source":"../src/errors.ts","name":null,"original":{"line":26,"column":41},"generated":{"line":36,"column":50}},{"source":"../src/errors.ts","name":null,"original":{"line":26,"column":52},"generated":{"line":36,"column":73}},{"source":"../src/errors.ts","name":null,"original":{"line":26,"column":15},"generated":{"line":36,"column":86}},{"source":"../src/errors.ts","name":null,"original":{"line":26,"column":65},"generated":{"line":36,"column":89}},{"source":"../src/errors.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":36,"column":115}},{"source":"../src/errors.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":38,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":38,"column":4}},{"source":"../src/errors.ts","name":null,"original":{"line":27,"column":21},"generated":{"line":38,"column":21}},{"source":"../src/errors.ts","name":null,"original":{"line":27,"column":22},"generated":{"line":38,"column":22}},{"source":"../src/errors.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":38,"column":31}},{"source":"../src/errors.ts","name":null,"original":{"line":27,"column":32},"generated":{"line":38,"column":32}},{"source":"../src/errors.ts","name":null,"original":{"line":27,"column":43},"generated":{"line":38,"column":55}},{"source":"../src/errors.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":38,"column":68}},{"source":"../src/errors.ts","name":null,"original":{"line":28,"column":3},"generated":{"line":39,"column":0}},{"source":"../src/errors.ts","name":null,"original":{"line":29,"column":1},"generated":{"line":40,"column":0}}],"sources":{"../src/errors.ts":"import { addInstrumentationHandler, logger } from '@sentry/utils';\n\nimport { SpanStatus } from './spanstatus';\nimport { getActiveTransaction } from './utils';\n\n/**\n * Configures global error listeners\n */\nexport function registerErrorInstrumentation(): void {\n  addInstrumentationHandler({\n    callback: errorCallback,\n    type: 'error',\n  });\n  addInstrumentationHandler({\n    callback: errorCallback,\n    type: 'unhandledrejection',\n  });\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback(): void {\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    logger.log(`[Tracing] Transaction: ${SpanStatus.InternalError} -> Global error occured`);\n    activeTransaction.setStatus(SpanStatus.InternalError);\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"295684ea3a68ade2ca906908c745dc79","cacheData":{"env":{}}}